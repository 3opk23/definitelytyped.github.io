---
layout: 'guide'
title: 'Best practices'
---

This is a guide to the best practices to follow when creating typing files.  There are a variety of different ways that typing files can be constructed.  Different approaches can be used - this is intended as a guide to what approaches make sense in certain scenarios.  

Also, it's a steer on how to deal with limitations in TypeScript.  As much as it hurts to say it, TypeScript v1.0 is not flawless.  There are certain minor flaws / shortcomings in the language which have implicatations for how typings are created.  Here we will detail those limitations, how they can be worked around at present and how you can best vote for improvements in the language on the [TypeScript site](//typescript.codeplex.com).

### Ghostin' modules:

````typescript
// this pattern has 3 name in top level.
interface NodeFoo {}
interface NodeBar {}
interface NodeBuzz {}

// this pattern has 1 name in top level. Non instantiable module
declare module NodeJS {
    interface Foo {}
    interface Bar {}
    interface Buzz {}
}

// safety!
var n = NodeJS; // TS Error : Could not find symbol NodeJS
````
